import{u as $,j as l,F as m,q as R,S as x}from"./index-CZYf1Hav.js";import{C as D}from"./cars-KOiS3fc8.js";import{l as T,m as w,n as b,j as k,k as g,C as p,e as j}from"./content-checkbox-BKajIatf.js";function J(e,r){return e&&r?`${e} laps or ${r} min`:e?`${e} laps`:r?`${r} min`:""}function _({content:e,list:r}){const t=e==="cars"?D:j,{wishCars:n,wishTracks:s,myCars:o,myTracks:i}=$(),[d,u]=e==="cars"?[n,o]:[s,i];return l.jsx(T,{width:"100%",maxH:"320px",children:l.jsx(w,{size:"sm",striped:!0,children:l.jsx(b,{fontSize:"xs",children:l.jsx(m,{each:r,children:h=>{const a=t[h.toString()];return a&&l.jsxs(k,{bgColor:"transparent",children:[l.jsx(g,{w:"20px",p:0,borderBottom:0,px:"4px",children:l.jsx(p,{size:"xs",mt:"4px",content:e,contentId:a.id,sku:a.sku,free:a.free,owned:u.includes(a==null?void 0:a.sku),wish:d.includes(a==null?void 0:a.sku)})}),l.jsx(g,{width:"100%",display:"flex",alignItems:"center",p:0,borderBottom:0,px:"4px",fontWeight:"bold",maxW:"284px",children:l.jsx(R,{truncate:!0,children:a.name})})]},h)}})})})})}function S(e,r=0){if(!e||!e.firstSessionTime)return"Schedule information unavailable";const t=e.firstSessionTime.substring(0,5);let[n,s]=t.split(":").map(Number);const o=n*60+s+r;n=Math.floor(o/60)%24,s=o%60;const i=e.repeatMinutes||0;return C(e.dayOffset)?E(n,s,i):H(e.dayOffset)?O(n,s,i):e.dayOffset.length===1?`Races on ${W(e.startDate,e.dayOffset[0])}, ${N(n,s,i)}`:z(e,n,s,i,r)}function C(e){if(e.length!==7)return!1;for(let r=0;r<7;r++)if(!e.includes(r))return!1;return!0}function H(e){if(e.length<=1)return!1;const r=new Set(e.map(t=>t%7));return r.size===1||r.size<=2&&e.length>=3}function E(e,r,t){return t===15?"Races every 15 minutes":t===30?r===0?"Races every 30 minutes at :00 and :30":r===15?"Races every 30 minutes at :15 and :45":`Races every 30 minutes starting at ${f(r)} past the hour`:t===60?r===0?"Races every hour at :00":r===45?"Races every hour at :45":`Races every hour at :${f(r)}`:t===120?e%2===0?r===0?"Races every even 2 hours at :00":r===45?"Races every even 2 hours at :45":`Races every even 2 hours at :${f(r)}`:r===0?"Races every odd 2 hours at :00":r===45?"Races every odd 2 hours at :45":`Races every odd 2 hours at :${f(r)}`:`Races every ${t} minutes`}function O(e,r,t){return t===0?`Races weekly at ${c(e,r)}`:t===60?`Races weekly every hour starting at ${c(e,r)}`:t===120?`Races weekly every 2 hours starting at ${c(e,r)}`:`Races weekly every ${t} minutes starting at ${c(e,r)}`}function z(e,r,t,n,s=0){const o=e.dayOffset.map(d=>{const u=new Date(e.startDate);if(u.setDate(u.getDate()+d),s!==0){const[h,a]=e.firstSessionTime.split(":").map(Number);u.setHours(h,a,0,0),u.setMinutes(u.getMinutes()+s)}return u.toLocaleDateString("en-US",{weekday:"long"})}),i=c(r,t);return n===0?`Races at ${i} on ${y(o)}`:n===60?`Races every hour on ${y(o)} starting at ${i}`:n===120?`Races every 2 hours on ${y(o)} starting at ${i}`:`Races every ${n} minutes on ${y(o)} starting at ${i}`}function N(e,r,t){const n=c(e,r);return t===0?`at ${n}`:t===60?r===0?"every hour at :00":r===45?"every hour at :45":`every hour at :${f(r)}`:t===120?e%2===0?r===45?"every even 2 hours at :45":`every even 2 hours starting at ${n}`:r===45?"every odd 2 hours at :45":`every odd 2 hours starting at ${n}`:t===30?r===0?"every 30 minutes at :00 and :30 past":r===15?"every 30 minutes at :15 and :45":`every 30 minutes starting at ${n}`:`every ${t} minutes starting at ${n}`}function c(e,r){e=(e%24+24)%24;const t=e>=12?"pm":"am";return`${e%12||12}:${f(r)}${t}`}function f(e){return e=(e%60+60)%60,e.toString().padStart(2,"0")}function y(e){if(e.length===0)return"";if(e.length===1)return e[0];if(e.length===2)return`${e[0]} and ${e[1]}`;const r=e[e.length-1];return`${e.slice(0,-1).join(", ")}, and ${r}`}function W(e,r){const t=new Date(e);return t.setDate(t.getDate()+r),t.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"})}function I(e,r=0){if(!e||e.length===0)return"No scheduled races";const t=e.filter(n=>n&&n.repeating&&n.firstSessionTime&&n.dayOffset);return t.length===0?"Schedule information unavailable":t.length===1?S(t[0],r):t.map((n,s)=>`Schedule ${s+1}: ${S(n,r)}`).join(`
`)}let v=null;function L(){return v===null&&(v=-new Date().getTimezoneOffset()),v}function F(e,r=!1){const t=r?L():0,n=x[e.toString()];return(n==null?void 0:n.raceSchedule)&&I(n.raceSchedule,t)}export{_ as C,J as c,F as g};
